{
    "openapi": "3.0.0",
    "info": {
      "description": "description",
      "version": "1.0.0",
      "title": "Wazuh-test-rest-api"
    },
    "servers": [
        {
          "url": "/"
        }
    ],
    "tags": [
        {
          "name": "Users and tasks request",
          "description": "Example API for requesting and return users and tasks requests"
        }
    ],
    "paths": {
        "/tasks": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "required": false,
                        "description": "Title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "completed",
                        "required": false,
                        "description": "completed",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Returns tasks",
                "responses": {
                "200": {
                        "description": "OK",
                        "schema": {
                        "$ref": "#/components/schemas/task"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the tasks",
                    "type": "number"
                }
            ],
            "get": {
                "tags": [
                    "TasksID"
                ],
                "summary": "Returns task by id",
                "responses": {
                "200": {
                        "description": "OK",
                        "schema": {
                        "$ref": "#/components/schemas/task"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns users",
                "responses": {
                "200": {
                        "description": "OK",
                        "schema": {
                        "$ref": "#/components/schemas/user"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the user",
                    "type": "number"
                }
            ],
            "get": {
                "tags": [
                    "UserId"
                ],
                "summary": "Returns user by id",
                "responses": {
                "200": {
                        "description": "OK",
                        "schema": {
                        "$ref": "#/components/schemas/user"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/tasks": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the user",
                    "type": "number"
                }
            ],
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "required": false,
                        "description": "Title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "completed",
                        "required": false,
                        "description": "completed",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Tasks by user"
                ],
                "summary": "Returns user by id",
                "responses": {
                "200": {
                        "description": "OK",
                        "schema": {
                        "$ref": "#/components/schemas/user"
                        }
                    }
                }
            }
        },
        "/tasks/status/{completed}": {
            "parameters": [
                {
                    "name": "completed",
                    "in": "path",
                    "required": true,
                    "description": "Return task with specified status",
                    "type": "number"
                }
            ],
            "get": {
                "tags": [
                    "Tasks by status"
                ],
                "summary": "Returns task by id",
                "responses": {
                "200": {
                        "description": "OK",
                        "schema": {
                        "$ref": "#/components/schemas/task"
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "task": {
                "properties": {
                    "user_id": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    },
                    "title": {
                        "type": "string"
                    },
                    "completed": {
                        "type": "boolean"
                    }
                }
            },
            "user": {
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/address"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "company": {
                        "$ref": "#/components/schemas/company"
                    }
                }
            },
            "address": {
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "suite": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "zipcode": {
                        "type": "string"
                    },
                    "geo": {
                        "$ref": "#/components/schemas/geo"
                    }
                }
            },
            "geo": {
                "properties": {
                    "lat": {
                        "type": "string"
                    },
                    "lng": {
                        "type": "string"
                    }
                }
            },
            "company": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "catchPhrase": {
                        "type": "string"
                    },
                    "bs": {
                        "type": "string"
                    }
                }
            }
        }
    }
} 